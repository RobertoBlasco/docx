{"parentUuid":null,"isSidechain":false,"userType":"external","cwd":"/home/rj/dev/ineows/docx/python","sessionId":"4b98cc18-123f-4077-a385-21ae3a0d0bf4","version":"1.0.44","type":"user","message":{"role":"user","content":"Cómo recojo un parámetro por línea de comando en python "},"uuid":"32398d8d-1457-4a48-963a-06730cd1f84a","timestamp":"2025-07-15T06:33:38.864Z"}
{"parentUuid":"32398d8d-1457-4a48-963a-06730cd1f84a","isSidechain":false,"userType":"external","cwd":"/home/rj/dev/ineows/docx/python","sessionId":"4b98cc18-123f-4077-a385-21ae3a0d0bf4","version":"1.0.44","message":{"id":"msg_01W126dhCSMBTaikdxFqsqS6","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"Para recoger parámetros por línea de comandos en Python puedes usar el módulo `sys` o `argparse`:\n\n**Opción 1 - Con `sys.argv`:**\n```python\nimport sys\n\n# sys.argv[0] es el nombre del script\n# sys.argv[1], sys.argv[2], etc. son los argumentos\nif len(sys.argv) > 1:\n    parametro = sys.argv[1]\n    print(f\"Parámetro recibido: {parametro}\")\n```\n\n**Opción 2 - Con `argparse` (recomendado):**\n```python\nimport argparse\n\nparser = argparse.ArgumentParser(description='Mi aplicación')\nparser.add_argument('archivo', help='Archivo a procesar')\nparser.add_argument('--output', '-o', help='Archivo de salida')\n\nargs = parser.parse_args()\nprint(f\"Archivo: {args.archivo}\")\nprint(f\"Output: {args.output}\")\n```\n\nUso: `python script.py archivo.txt --output resultado.txt`"}],"stop_reason":"end_turn","stop_sequence":null,"usage":{"input_tokens":3,"cache_creation_input_tokens":14473,"cache_read_input_tokens":0,"output_tokens":267,"service_tier":"standard"}},"requestId":"req_011CR8LZYgRCbvEbwsZPu8Zp","type":"assistant","uuid":"525575d7-bd2b-4e28-9e7b-3b387015a043","timestamp":"2025-07-15T06:34:06.863Z"}
